                /*  PACKAGE SPECIFICATION  */
CREATE OR REPLACE PACKAGE find_total IS
    FUNCTION add_tax(subtotal IN NUMBER)
        RETURN NUMBER;

    PROCEDURE calc_total
        (cus_id IN orders.customer_id%TYPE,
         subtotal IN OUT orders.subtotal%TYPE,
         total OUT orders.subtotal%TYPE);
END;
	/*  PACKAGE BODY FOR FUNCTION AND PROCEDURE  */
CREATE OR REPLACE PACKAGE BODY find_total IS
    FUNCTION add_tax(subtotal NUMBER)
        RETURN NUMBER 
    IS
        tax_apply CONSTANT NUMBER (7,2) := 1.13;
        total orders.order_total%TYPE;
    BEGIN
        total := subtotal * tax_apply;
        RETURN total;
    END add_tax;

    PROCEDURE calc_total
        (cus_id IN orders.customer_id%TYPE,
         subtotal IN OUT orders.subtotal%TYPE,
         total OUT orders.subtotal%TYPE)
    IS
        mem_id customer.member_id%TYPE;
        ismem customer.is_member%TYPE;
        discount member.discount_percent%TYPE;
        pct_fix CONSTANT NUMBER := 100;
    BEGIN
        SELECT c.member_id,c.is_member,m.discount_percent INTO mem_id,ismem,discount
            FROM customer c FULL JOIN member m on c.customer_id = m.customer_id
            WHERE c.customer_id = cus_id;
        IF ismem = 'Y' THEN
            subtotal := subtotal * (pct_fix-discount)/pct_fix;
            total := add_tax(subtotal);
        ELSE
            total := add_tax(subtotal);
        END IF;   
    END calc_total;
END;
         /*  TRIGGER TO AUTOGENERATE TOTAL WITH OR WITHOUT DISCOUNT  */
CREATE OR REPLACE TRIGGER new_order_tr
    BEFORE INSERT ON orders
    FOR EACH ROW
DECLARE
    cus_id customer.customer_id%TYPE;
BEGIN
    cus_id := customer_seq.NEXTVAL;
    IF :NEW.customer_id IS NULL THEN
        INSERT INTO Customer(customer_id) VALUES(cus_id);
        :NEW.customer_id := cus_id;
    END IF;
    find_total.calc_total(:NEW.customer_id,:NEW.subtotal,:NEW.order_total);
END;
-------------------GOLD MEMBER DISCOUNTED ORDER---------------------------
INSERT INTO Orders(Order_ID,Customer_ID,Subtotal,Order_Total,Order_Date,Payment_ID)
VALUES(order_seq.NEXTVAL,2005,1000,null,'02-AUG-20',null);
---------------------BRONZE MEMBER DISCOUNTED ORDER------------------------
INSERT INTO Orders(Order_ID,Customer_ID,Subtotal,Order_Total,Order_Date,Payment_ID)
VALUES(order_seq.NEXTVAL,2000,1000,null,'22-AUG-19',null);
------------------------------NON-MEMBER ORDER------------------------------
INSERT INTO Orders(Order_ID,Customer_ID,Subtotal,Order_Total,Order_Date,Payment_ID)
VALUES(order_seq.NEXTVAL,2009,1000,null,'29-JUL-20',null);
-----------------------ANONYMOUS CUSTOMER ORDER---------------------------
INSERT INTO Orders(Order_ID,Customer_ID,Subtotal,Order_Total,Order_Date,Payment_ID)
VALUES(order_seq.NEXTVAL,null,2000,null,'29-JUL-20',null);
----------------------VIEW AUTOGENERATED VALUES------------
select * from orders WHERE order_date IN ('02-AUG-20','22-AUG-19','29-JUL-20');
